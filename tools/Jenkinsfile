#!groovy
@Library('jenkins-pipeline-lib') _

pipeline
{
  agent any
  stages
  {
    stage('libc Documentation')
    {
      steps
      {
        copyArtifacts filter: 'documentation.tgz', fingerprintArtifacts: true, projectName: 'ea-nightly/libc/master', selector: upstream(fallbackToLastSuccessful: true, upstreamFilterStrategy: 'UseNewest')
      }
      post
      {
        success
        {
          sh 'git checkout master'
          sh 'git rm -rf libc'
          sh 'mkdir libc'
          sh 'tar -C libc --strip-components=2 -xf documentation.tgz'
          sh 'git add libc'
          sh 'git commit -m "Updating libc documentation via Jenkins Pipeline Job"'
          sh 'git push'
          sh 'rm documentation.tgz'
        }
      }
    }
    stage('libmemory Documentation')
    {
      steps
      {
        copyArtifacts filter: 'documentation.tgz', fingerprintArtifacts: true, projectName: 'ea-nightly/libmemory/master', selector: upstream(fallbackToLastSuccessful: true, upstreamFilterStrategy: 'UseNewest')
      }
      post
      {
        success
        {
          sh 'git checkout master'
          sh 'git rm -rf libmemory'
          sh 'mkdir libmemory'
          sh 'tar -C libmemory --strip-components=2 -xf documentation.tgz'
          sh 'git add libmemory'
          sh 'git commit -m "Updating libmemory documentation via Jenkins Pipeline Job"'
          sh 'git push'
          sh 'rm documentation.tgz'
        }
      }
    }
  }
}
